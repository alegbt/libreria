package it.formazione.libreria.mybatis.mapper;

import it.formazione.libreria.mybatis.model.Libri;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface LibriMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table libri
     *
     * @mbg.generated Tue Nov 07 17:49:16 CET 2023
     */
    @Delete({
        "delete from libri",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table libri
     *
     * @mbg.generated Tue Nov 07 17:49:16 CET 2023
     */
    @Insert({
        "insert into libri (id, nome, ",
        "prezzo, autore_id, ",
        "casa_ed_id)",
        "values (#{id,jdbcType=INTEGER}, #{nome,jdbcType=VARCHAR}, ",
        "#{prezzo,jdbcType=INTEGER}, #{autoreId,jdbcType=INTEGER}, ",
        "#{casaEdId,jdbcType=INTEGER})"
    })
    int insert(Libri row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table libri
     *
     * @mbg.generated Tue Nov 07 17:49:16 CET 2023
     */
    @Select({
        "select",
        "id, nome, prezzo, autore_id, casa_ed_id",
        "from libri",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="prezzo", property="prezzo", jdbcType=JdbcType.INTEGER),
        @Result(column="autore_id", property="autoreId", jdbcType=JdbcType.INTEGER),
        @Result(column="casa_ed_id", property="casaEdId", jdbcType=JdbcType.INTEGER)
    })
    Libri selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table libri
     *
     * @mbg.generated Tue Nov 07 17:49:16 CET 2023
     */
    @Select({
        "select",
        "id, nome, prezzo, autore_id, casa_ed_id",
        "from libri"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="prezzo", property="prezzo", jdbcType=JdbcType.INTEGER),
        @Result(column="autore_id", property="autoreId", jdbcType=JdbcType.INTEGER),
        @Result(column="casa_ed_id", property="casaEdId", jdbcType=JdbcType.INTEGER)
    })
    List<Libri> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table libri
     *
     * @mbg.generated Tue Nov 07 17:49:16 CET 2023
     */
    @Update({
        "update libri",
        "set nome = #{nome,jdbcType=VARCHAR},",
          "prezzo = #{prezzo,jdbcType=INTEGER},",
          "autore_id = #{autoreId,jdbcType=INTEGER},",
          "casa_ed_id = #{casaEdId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Libri row);
}